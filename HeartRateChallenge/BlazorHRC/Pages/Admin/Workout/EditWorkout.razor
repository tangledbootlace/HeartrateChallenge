@using BlazorHRC.Data
@using BlazorHRC.Data.Entities
@using BlazorHRC.Data.Services

@page "/editworkout/{id}"

@inject CustomHttpClient Http
@inject NavigationManager NavigationManager
@inject AppSettingsService AppSettingsService

<h2>Edit Workout</h2>
<hr />
<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Username" class="control-label">Username</label>
                <input for="Username" class="form-control" @bind="@workout.Username" />
            </div>
            <div class="form-group">
                <label for="FileName" class="control-label">File Name</label>
                <input for="FileName" class="form-control" @bind="@workout.FileName" />
            </div>
            <div class="form-group">
                <label for="UploadDate" class="control-label">Upload Date</label>
                <input for="UploadDate" class="form-control" @bind="@workout.UploadDate" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@UpdateWorkout" value="Update" />
            <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</form>

@code {

    [Parameter]
    public string id { get; set; }
    string baseUrl;

    Workout workout = new Workout();

    protected override async Task OnInitializedAsync()
    {
        baseUrl = AppSettingsService.GetBaseUrl();
        workout = await Http.GetJsonAsync<Workout>(baseUrl + "/api/workouts/details/" + id);
    }

    protected async Task UpdateWorkout()
    {
        await Http.PutJsonAsync(baseUrl + "/api/workouts/edit/" + id, workout);
        NavigationManager.NavigateTo("listworkouts");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("listworkouts");
    }
}     