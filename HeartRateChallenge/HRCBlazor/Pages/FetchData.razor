@page "/fetchdata"

@using HRCBlazor.Data
@using Microsoft.Extensions.Configuration
@inject WeatherForecastService ForecastService
@inject LeaderboardService LS

@using HRCDB.Data.HRC

<h1>Leaderboard</h1>

<p>Leaderboard Test.</p>

@if (_leaderboardData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Total Points</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in _leaderboardData)
            {
                <tr>
                    <td>@user.Name</td>
                    <td>@user.TotalPoints.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IQueryable<Leaderboard> _leaderboardData;

    protected override async Task OnInitializedAsync()
    {
        _leaderboardData = await LS.GetLeaderboardsAsync();
    }
}

@*@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>*@
}

@*@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}*@
